name: Build, Package and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-package-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run ktlintFormat
        run: ./gradlew ktlintFormat

      - name: Build shadowJar
        run: ./gradlew shadowJar

      - name: Package .dmg with jpackage (macOS)
        shell: bash
        run: |
          APP_VERSION="1.0.${{ github.run_number }}"
          JAR_FILE=$(basename $(find build/libs -name "super-share-*.jar"))
          jpackage \
          --type dmg \
          --name SuperShare \
          --input build/libs \
          --main-jar "$JAR_FILE" \
          --main-class MainKt \
          --app-version "$APP_VERSION" \
          --icon src/main/resources/icons/file-transformer.icns \
          --vendor "zeyan-du"

      - name: Upload .dmg artifact
        uses: actions/upload-artifact@v4
        with:
          name: super-share-dmg
          path: SuperShare-*.dmg
      
      - name: Upload .jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: super-share-jar
          path: build/libs/super-share-*.jar


  build-and-package-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run ktlintFormat
        run: ./gradlew ktlintFormat

      - name: Build shadowJar
        run: ./gradlew shadowJar

      - name: Package portable app with jpackage (Windows)
        shell: bash
        run: |
          APP_VERSION="1.0.${{ github.run_number }}"
          JAR_FILE=$(basename $(find build/libs -name "super-share-*.jar"))
          jpackage \
          --type app-image \
          --name SuperShare \
          --input build/libs \
          --main-jar "$JAR_FILE" \
          --main-class MainKt \
          --app-version "$APP_VERSION" \
          --vendor "zeyan" \
          --icon src/main/resources/icons/file-share.ico \
          --dest build/dist

      - name: Zip the portable app
        shell: pwsh
        run: |
          Compress-Archive -Path build/dist/SuperShare/* -DestinationPath build/dist/SuperShare-windows-portable.zip

      - name: Upload portable app artifact
        uses: actions/upload-artifact@v4
        with:
          name: super-share-windows-portable
          path: build/dist/SuperShare-windows-portable.zip

  release:
    needs: [ build-and-package-macos, build-and-package-windows ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/super-share-dmg/*
            artifacts/super-share-windows-portable/*
            artifacts/super-share-jar/*
          tag_name: "v1.0.${{ github.run_number }}"
          body: "Automated release based on commit ${{ github.sha }}"
          draft: false
          prerelease: false